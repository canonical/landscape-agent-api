// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.32.0
// 	protoc        v3.12.4
// source: hostagent.proto

package landscape_hostagent_api

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// InstanceState reports the supported states of an instance communicated by the agent.
type InstanceState int32

const (
	InstanceState_Stopped InstanceState = 0
	InstanceState_Running InstanceState = 1
)

// Enum value maps for InstanceState.
var (
	InstanceState_name = map[int32]string{
		0: "Stopped",
		1: "Running",
	}
	InstanceState_value = map[string]int32{
		"Stopped": 0,
		"Running": 1,
	}
)

func (x InstanceState) Enum() *InstanceState {
	p := new(InstanceState)
	*p = x
	return p
}

func (x InstanceState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (InstanceState) Descriptor() protoreflect.EnumDescriptor {
	return file_hostagent_proto_enumTypes[0].Descriptor()
}

func (InstanceState) Type() protoreflect.EnumType {
	return &file_hostagent_proto_enumTypes[0]
}

func (x InstanceState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use InstanceState.Descriptor instead.
func (InstanceState) EnumDescriptor() ([]byte, []int) {
	return file_hostagent_proto_rawDescGZIP(), []int{0}
}

type HostAgentInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token             string                        `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`                                                          // token corresponds to the Pro token subscription. Discared on on-prem landscape server.
	Uid               string                        `protobuf:"bytes,2,opt,name=uid,proto3" json:"uid,omitempty"`                                                              // uid is empty on the first request if the host never contacted landscape. Landscape generates one for the hostagent to send it back with each transaction.
	Hostname          string                        `protobuf:"bytes,3,opt,name=hostname,proto3" json:"hostname,omitempty"`                                                    // hostname is literally the name of the host itself.
	Instances         []*HostAgentInfo_InstanceInfo `protobuf:"bytes,4,rep,name=instances,proto3" json:"instances,omitempty"`                                                  // instances are all the machine instances registered on the machine.
	AccountName       string                        `protobuf:"bytes,5,opt,name=account_name,json=accountName,proto3" json:"account_name,omitempty"`                           // account_name is the account used in Landscape SaaS.
	RegistrationKey   *string                       `protobuf:"bytes,6,opt,name=registration_key,json=registrationKey,proto3,oneof" json:"registration_key,omitempty"`         // registration_key is an optional account-wide key used to register clients.
	DefaultInstanceId *string                       `protobuf:"bytes,7,opt,name=default_instance_id,json=defaultInstanceId,proto3,oneof" json:"default_instance_id,omitempty"` // default_instance_id is the id of the default instance.
}

func (x *HostAgentInfo) Reset() {
	*x = HostAgentInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hostagent_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HostAgentInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HostAgentInfo) ProtoMessage() {}

func (x *HostAgentInfo) ProtoReflect() protoreflect.Message {
	mi := &file_hostagent_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HostAgentInfo.ProtoReflect.Descriptor instead.
func (*HostAgentInfo) Descriptor() ([]byte, []int) {
	return file_hostagent_proto_rawDescGZIP(), []int{0}
}

func (x *HostAgentInfo) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *HostAgentInfo) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *HostAgentInfo) GetHostname() string {
	if x != nil {
		return x.Hostname
	}
	return ""
}

func (x *HostAgentInfo) GetInstances() []*HostAgentInfo_InstanceInfo {
	if x != nil {
		return x.Instances
	}
	return nil
}

func (x *HostAgentInfo) GetAccountName() string {
	if x != nil {
		return x.AccountName
	}
	return ""
}

func (x *HostAgentInfo) GetRegistrationKey() string {
	if x != nil && x.RegistrationKey != nil {
		return *x.RegistrationKey
	}
	return ""
}

func (x *HostAgentInfo) GetDefaultInstanceId() string {
	if x != nil && x.DefaultInstanceId != nil {
		return *x.DefaultInstanceId
	}
	return ""
}

// Command is an instruction that landscape can send via its stream to the host agent.
// The command is self-explanatory or specified.
type Command struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// only one command can be passed at a time.
	//
	// Types that are assignable to Cmd:
	//
	//	*Command_AssignHost_
	//	*Command_Start_
	//	*Command_Stop_
	//	*Command_Install_
	//	*Command_Uninstall_
	//	*Command_SetDefault_
	//	*Command_ShutdownHost_
	Cmd isCommand_Cmd `protobuf_oneof:"cmd"`
}

func (x *Command) Reset() {
	*x = Command{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hostagent_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Command) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Command) ProtoMessage() {}

func (x *Command) ProtoReflect() protoreflect.Message {
	mi := &file_hostagent_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Command.ProtoReflect.Descriptor instead.
func (*Command) Descriptor() ([]byte, []int) {
	return file_hostagent_proto_rawDescGZIP(), []int{1}
}

func (m *Command) GetCmd() isCommand_Cmd {
	if m != nil {
		return m.Cmd
	}
	return nil
}

func (x *Command) GetAssignHost() *Command_AssignHost {
	if x, ok := x.GetCmd().(*Command_AssignHost_); ok {
		return x.AssignHost
	}
	return nil
}

func (x *Command) GetStart() *Command_Start {
	if x, ok := x.GetCmd().(*Command_Start_); ok {
		return x.Start
	}
	return nil
}

func (x *Command) GetStop() *Command_Stop {
	if x, ok := x.GetCmd().(*Command_Stop_); ok {
		return x.Stop
	}
	return nil
}

func (x *Command) GetInstall() *Command_Install {
	if x, ok := x.GetCmd().(*Command_Install_); ok {
		return x.Install
	}
	return nil
}

func (x *Command) GetUninstall() *Command_Uninstall {
	if x, ok := x.GetCmd().(*Command_Uninstall_); ok {
		return x.Uninstall
	}
	return nil
}

func (x *Command) GetSetDefault() *Command_SetDefault {
	if x, ok := x.GetCmd().(*Command_SetDefault_); ok {
		return x.SetDefault
	}
	return nil
}

func (x *Command) GetShutdownHost() *Command_ShutdownHost {
	if x, ok := x.GetCmd().(*Command_ShutdownHost_); ok {
		return x.ShutdownHost
	}
	return nil
}

type isCommand_Cmd interface {
	isCommand_Cmd()
}

type Command_AssignHost_ struct {
	AssignHost *Command_AssignHost `protobuf:"bytes,1,opt,name=assign_host,json=assignHost,proto3,oneof"`
}

type Command_Start_ struct {
	Start *Command_Start `protobuf:"bytes,2,opt,name=start,proto3,oneof"`
}

type Command_Stop_ struct {
	Stop *Command_Stop `protobuf:"bytes,3,opt,name=stop,proto3,oneof"`
}

type Command_Install_ struct {
	Install *Command_Install `protobuf:"bytes,4,opt,name=install,proto3,oneof"`
}

type Command_Uninstall_ struct {
	Uninstall *Command_Uninstall `protobuf:"bytes,5,opt,name=uninstall,proto3,oneof"`
}

type Command_SetDefault_ struct {
	SetDefault *Command_SetDefault `protobuf:"bytes,6,opt,name=set_default,json=setDefault,proto3,oneof"`
}

type Command_ShutdownHost_ struct {
	ShutdownHost *Command_ShutdownHost `protobuf:"bytes,7,opt,name=shutdown_host,json=shutdownHost,proto3,oneof"`
}

func (*Command_AssignHost_) isCommand_Cmd() {}

func (*Command_Start_) isCommand_Cmd() {}

func (*Command_Stop_) isCommand_Cmd() {}

func (*Command_Install_) isCommand_Cmd() {}

func (*Command_Uninstall_) isCommand_Cmd() {}

func (*Command_SetDefault_) isCommand_Cmd() {}

func (*Command_ShutdownHost_) isCommand_Cmd() {}

// InstanceInfo gather all the information of a given instance.
type HostAgentInfo_InstanceInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            string        `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string        `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`                                                                                  // name is the hostname of the instance.
	VersionId     string        `protobuf:"bytes,3,opt,name=version_id,json=versionId,proto3" json:"version_id,omitempty"`                                                       // version_id string as in VERSION_ID in /etc/os-release
	InstanceState InstanceState `protobuf:"varint,4,opt,name=instance_state,json=instanceState,proto3,enum=landscapehostagentapi.InstanceState" json:"instance_state,omitempty"` // instance_state are the defined states of the instances.
}

func (x *HostAgentInfo_InstanceInfo) Reset() {
	*x = HostAgentInfo_InstanceInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hostagent_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HostAgentInfo_InstanceInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HostAgentInfo_InstanceInfo) ProtoMessage() {}

func (x *HostAgentInfo_InstanceInfo) ProtoReflect() protoreflect.Message {
	mi := &file_hostagent_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HostAgentInfo_InstanceInfo.ProtoReflect.Descriptor instead.
func (*HostAgentInfo_InstanceInfo) Descriptor() ([]byte, []int) {
	return file_hostagent_proto_rawDescGZIP(), []int{0, 0}
}

func (x *HostAgentInfo_InstanceInfo) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *HostAgentInfo_InstanceInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *HostAgentInfo_InstanceInfo) GetVersionId() string {
	if x != nil {
		return x.VersionId
	}
	return ""
}

func (x *HostAgentInfo_InstanceInfo) GetInstanceState() InstanceState {
	if x != nil {
		return x.InstanceState
	}
	return InstanceState_Stopped
}

type Command_AssignHost struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid string `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
}

func (x *Command_AssignHost) Reset() {
	*x = Command_AssignHost{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hostagent_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Command_AssignHost) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Command_AssignHost) ProtoMessage() {}

func (x *Command_AssignHost) ProtoReflect() protoreflect.Message {
	mi := &file_hostagent_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Command_AssignHost.ProtoReflect.Descriptor instead.
func (*Command_AssignHost) Descriptor() ([]byte, []int) {
	return file_hostagent_proto_rawDescGZIP(), []int{1, 0}
}

func (x *Command_AssignHost) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

type Command_Start struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *Command_Start) Reset() {
	*x = Command_Start{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hostagent_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Command_Start) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Command_Start) ProtoMessage() {}

func (x *Command_Start) ProtoReflect() protoreflect.Message {
	mi := &file_hostagent_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Command_Start.ProtoReflect.Descriptor instead.
func (*Command_Start) Descriptor() ([]byte, []int) {
	return file_hostagent_proto_rawDescGZIP(), []int{1, 1}
}

func (x *Command_Start) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type Command_Stop struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *Command_Stop) Reset() {
	*x = Command_Stop{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hostagent_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Command_Stop) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Command_Stop) ProtoMessage() {}

func (x *Command_Stop) ProtoReflect() protoreflect.Message {
	mi := &file_hostagent_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Command_Stop.ProtoReflect.Descriptor instead.
func (*Command_Stop) Descriptor() ([]byte, []int) {
	return file_hostagent_proto_rawDescGZIP(), []int{1, 2}
}

func (x *Command_Stop) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type Command_Install struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Cloudinit *string `protobuf:"bytes,2,opt,name=cloudinit,proto3,oneof" json:"cloudinit,omitempty"` // cloudinit is the yaml configuration to optionally pass to an instance.
}

func (x *Command_Install) Reset() {
	*x = Command_Install{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hostagent_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Command_Install) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Command_Install) ProtoMessage() {}

func (x *Command_Install) ProtoReflect() protoreflect.Message {
	mi := &file_hostagent_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Command_Install.ProtoReflect.Descriptor instead.
func (*Command_Install) Descriptor() ([]byte, []int) {
	return file_hostagent_proto_rawDescGZIP(), []int{1, 3}
}

func (x *Command_Install) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Command_Install) GetCloudinit() string {
	if x != nil && x.Cloudinit != nil {
		return *x.Cloudinit
	}
	return ""
}

type Command_Uninstall struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *Command_Uninstall) Reset() {
	*x = Command_Uninstall{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hostagent_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Command_Uninstall) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Command_Uninstall) ProtoMessage() {}

func (x *Command_Uninstall) ProtoReflect() protoreflect.Message {
	mi := &file_hostagent_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Command_Uninstall.ProtoReflect.Descriptor instead.
func (*Command_Uninstall) Descriptor() ([]byte, []int) {
	return file_hostagent_proto_rawDescGZIP(), []int{1, 4}
}

func (x *Command_Uninstall) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// SetDefault changes the default instance on the host.
type Command_SetDefault struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *Command_SetDefault) Reset() {
	*x = Command_SetDefault{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hostagent_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Command_SetDefault) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Command_SetDefault) ProtoMessage() {}

func (x *Command_SetDefault) ProtoReflect() protoreflect.Message {
	mi := &file_hostagent_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Command_SetDefault.ProtoReflect.Descriptor instead.
func (*Command_SetDefault) Descriptor() ([]byte, []int) {
	return file_hostagent_proto_rawDescGZIP(), []int{1, 5}
}

func (x *Command_SetDefault) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// ShutdownHost forces a shut down of the agent/controller from landscape perspective (it may autorestart).
type Command_ShutdownHost struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Command_ShutdownHost) Reset() {
	*x = Command_ShutdownHost{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hostagent_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Command_ShutdownHost) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Command_ShutdownHost) ProtoMessage() {}

func (x *Command_ShutdownHost) ProtoReflect() protoreflect.Message {
	mi := &file_hostagent_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Command_ShutdownHost.ProtoReflect.Descriptor instead.
func (*Command_ShutdownHost) Descriptor() ([]byte, []int) {
	return file_hostagent_proto_rawDescGZIP(), []int{1, 6}
}

var File_hostagent_proto protoreflect.FileDescriptor

var file_hostagent_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x68, 0x6f, 0x73, 0x74, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x15, 0x6c, 0x61, 0x6e, 0x64, 0x73, 0x63, 0x61, 0x70, 0x65, 0x68, 0x6f, 0x73, 0x74,
	0x61, 0x67, 0x65, 0x6e, 0x74, 0x61, 0x70, 0x69, 0x22, 0xfa, 0x03, 0x0a, 0x0d, 0x48, 0x6f, 0x73,
	0x74, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75,
	0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x4f,
	0x0a, 0x09, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x31, 0x2e, 0x6c, 0x61, 0x6e, 0x64, 0x73, 0x63, 0x61, 0x70, 0x65, 0x68, 0x6f, 0x73,
	0x74, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x61, 0x70, 0x69, 0x2e, 0x48, 0x6f, 0x73, 0x74, 0x41, 0x67,
	0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x09, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x12,
	0x21, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x2e, 0x0a, 0x10, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0f,
	0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x88,
	0x01, 0x01, 0x12, 0x33, 0x0a, 0x13, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x69, 0x6e,
	0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x01, 0x52, 0x11, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e,
	0x63, 0x65, 0x49, 0x64, 0x88, 0x01, 0x01, 0x1a, 0x9e, 0x01, 0x0a, 0x0c, 0x49, 0x6e, 0x73, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x4b, 0x0a, 0x0e, 0x69,
	0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x24, 0x2e, 0x6c, 0x61, 0x6e, 0x64, 0x73, 0x63, 0x61, 0x70, 0x65, 0x68,
	0x6f, 0x73, 0x74, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x61, 0x70, 0x69, 0x2e, 0x49, 0x6e, 0x73, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x0d, 0x69, 0x6e, 0x73, 0x74, 0x61,
	0x6e, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x42, 0x13, 0x0a, 0x11, 0x5f, 0x72, 0x65, 0x67,
	0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6b, 0x65, 0x79, 0x42, 0x16, 0x0a,
	0x14, 0x5f, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e,
	0x63, 0x65, 0x5f, 0x69, 0x64, 0x22, 0xef, 0x05, 0x0a, 0x07, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e,
	0x64, 0x12, 0x4c, 0x0a, 0x0b, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x5f, 0x68, 0x6f, 0x73, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x6c, 0x61, 0x6e, 0x64, 0x73, 0x63, 0x61,
	0x70, 0x65, 0x68, 0x6f, 0x73, 0x74, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x61, 0x70, 0x69, 0x2e, 0x43,
	0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x2e, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x48, 0x6f, 0x73,
	0x74, 0x48, 0x00, 0x52, 0x0a, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x48, 0x6f, 0x73, 0x74, 0x12,
	0x3c, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24,
	0x2e, 0x6c, 0x61, 0x6e, 0x64, 0x73, 0x63, 0x61, 0x70, 0x65, 0x68, 0x6f, 0x73, 0x74, 0x61, 0x67,
	0x65, 0x6e, 0x74, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x2e, 0x53,
	0x74, 0x61, 0x72, 0x74, 0x48, 0x00, 0x52, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x12, 0x39, 0x0a,
	0x04, 0x73, 0x74, 0x6f, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x6c, 0x61,
	0x6e, 0x64, 0x73, 0x63, 0x61, 0x70, 0x65, 0x68, 0x6f, 0x73, 0x74, 0x61, 0x67, 0x65, 0x6e, 0x74,
	0x61, 0x70, 0x69, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x2e, 0x53, 0x74, 0x6f, 0x70,
	0x48, 0x00, 0x52, 0x04, 0x73, 0x74, 0x6f, 0x70, 0x12, 0x42, 0x0a, 0x07, 0x69, 0x6e, 0x73, 0x74,
	0x61, 0x6c, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x6c, 0x61, 0x6e, 0x64,
	0x73, 0x63, 0x61, 0x70, 0x65, 0x68, 0x6f, 0x73, 0x74, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x61, 0x70,
	0x69, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x2e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c,
	0x6c, 0x48, 0x00, 0x52, 0x07, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x12, 0x48, 0x0a, 0x09,
	0x75, 0x6e, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x28, 0x2e, 0x6c, 0x61, 0x6e, 0x64, 0x73, 0x63, 0x61, 0x70, 0x65, 0x68, 0x6f, 0x73, 0x74, 0x61,
	0x67, 0x65, 0x6e, 0x74, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x2e,
	0x55, 0x6e, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x48, 0x00, 0x52, 0x09, 0x75, 0x6e, 0x69,
	0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x12, 0x4c, 0x0a, 0x0b, 0x73, 0x65, 0x74, 0x5f, 0x64, 0x65,
	0x66, 0x61, 0x75, 0x6c, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x6c, 0x61,
	0x6e, 0x64, 0x73, 0x63, 0x61, 0x70, 0x65, 0x68, 0x6f, 0x73, 0x74, 0x61, 0x67, 0x65, 0x6e, 0x74,
	0x61, 0x70, 0x69, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x2e, 0x53, 0x65, 0x74, 0x44,
	0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x48, 0x00, 0x52, 0x0a, 0x73, 0x65, 0x74, 0x44, 0x65, 0x66,
	0x61, 0x75, 0x6c, 0x74, 0x12, 0x52, 0x0a, 0x0d, 0x73, 0x68, 0x75, 0x74, 0x64, 0x6f, 0x77, 0x6e,
	0x5f, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x6c, 0x61,
	0x6e, 0x64, 0x73, 0x63, 0x61, 0x70, 0x65, 0x68, 0x6f, 0x73, 0x74, 0x61, 0x67, 0x65, 0x6e, 0x74,
	0x61, 0x70, 0x69, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x2e, 0x53, 0x68, 0x75, 0x74,
	0x64, 0x6f, 0x77, 0x6e, 0x48, 0x6f, 0x73, 0x74, 0x48, 0x00, 0x52, 0x0c, 0x73, 0x68, 0x75, 0x74,
	0x64, 0x6f, 0x77, 0x6e, 0x48, 0x6f, 0x73, 0x74, 0x1a, 0x1e, 0x0a, 0x0a, 0x41, 0x73, 0x73, 0x69,
	0x67, 0x6e, 0x48, 0x6f, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x69, 0x64, 0x1a, 0x17, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x72,
	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x1a, 0x16, 0x0a, 0x04, 0x53, 0x74, 0x6f, 0x70, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x1a, 0x4a, 0x0a, 0x07, 0x49, 0x6e, 0x73,
	0x74, 0x61, 0x6c, 0x6c, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x21, 0x0a, 0x09, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x69, 0x6e, 0x69,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x09, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x69, 0x6e, 0x69, 0x74, 0x88, 0x01, 0x01, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x69, 0x6e, 0x69, 0x74, 0x1a, 0x1b, 0x0a, 0x09, 0x55, 0x6e, 0x69, 0x6e, 0x73, 0x74, 0x61,
	0x6c, 0x6c, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x1a, 0x1c, 0x0a, 0x0a, 0x53, 0x65, 0x74, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x1a, 0x0e, 0x0a, 0x0c, 0x53, 0x68, 0x75, 0x74, 0x64, 0x6f, 0x77, 0x6e, 0x48, 0x6f, 0x73, 0x74,
	0x42, 0x05, 0x0a, 0x03, 0x63, 0x6d, 0x64, 0x2a, 0x29, 0x0a, 0x0d, 0x49, 0x6e, 0x73, 0x74, 0x61,
	0x6e, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x74, 0x6f, 0x70,
	0x70, 0x65, 0x64, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x52, 0x75, 0x6e, 0x6e, 0x69, 0x6e, 0x67,
	0x10, 0x01, 0x32, 0x6b, 0x0a, 0x12, 0x4c, 0x61, 0x6e, 0x64, 0x73, 0x63, 0x61, 0x70, 0x65, 0x48,
	0x6f, 0x73, 0x74, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x12, 0x55, 0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x12, 0x24, 0x2e, 0x6c, 0x61, 0x6e, 0x64, 0x73, 0x63, 0x61, 0x70, 0x65, 0x68,
	0x6f, 0x73, 0x74, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x61, 0x70, 0x69, 0x2e, 0x48, 0x6f, 0x73, 0x74,
	0x41, 0x67, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x1e, 0x2e, 0x6c, 0x61, 0x6e, 0x64,
	0x73, 0x63, 0x61, 0x70, 0x65, 0x68, 0x6f, 0x73, 0x74, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x61, 0x70,
	0x69, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x22, 0x00, 0x28, 0x01, 0x30, 0x01, 0x42,
	0x2e, 0x5a, 0x2c, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x61,
	0x6e, 0x6f, 0x6e, 0x69, 0x63, 0x61, 0x6c, 0x2f, 0x6c, 0x61, 0x6e, 0x64, 0x73, 0x63, 0x61, 0x70,
	0x65, 0x2d, 0x68, 0x6f, 0x73, 0x74, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2d, 0x61, 0x70, 0x69, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_hostagent_proto_rawDescOnce sync.Once
	file_hostagent_proto_rawDescData = file_hostagent_proto_rawDesc
)

func file_hostagent_proto_rawDescGZIP() []byte {
	file_hostagent_proto_rawDescOnce.Do(func() {
		file_hostagent_proto_rawDescData = protoimpl.X.CompressGZIP(file_hostagent_proto_rawDescData)
	})
	return file_hostagent_proto_rawDescData
}

var file_hostagent_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_hostagent_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_hostagent_proto_goTypes = []interface{}{
	(InstanceState)(0),                 // 0: landscapehostagentapi.InstanceState
	(*HostAgentInfo)(nil),              // 1: landscapehostagentapi.HostAgentInfo
	(*Command)(nil),                    // 2: landscapehostagentapi.Command
	(*HostAgentInfo_InstanceInfo)(nil), // 3: landscapehostagentapi.HostAgentInfo.InstanceInfo
	(*Command_AssignHost)(nil),         // 4: landscapehostagentapi.Command.AssignHost
	(*Command_Start)(nil),              // 5: landscapehostagentapi.Command.Start
	(*Command_Stop)(nil),               // 6: landscapehostagentapi.Command.Stop
	(*Command_Install)(nil),            // 7: landscapehostagentapi.Command.Install
	(*Command_Uninstall)(nil),          // 8: landscapehostagentapi.Command.Uninstall
	(*Command_SetDefault)(nil),         // 9: landscapehostagentapi.Command.SetDefault
	(*Command_ShutdownHost)(nil),       // 10: landscapehostagentapi.Command.ShutdownHost
}
var file_hostagent_proto_depIdxs = []int32{
	3,  // 0: landscapehostagentapi.HostAgentInfo.instances:type_name -> landscapehostagentapi.HostAgentInfo.InstanceInfo
	4,  // 1: landscapehostagentapi.Command.assign_host:type_name -> landscapehostagentapi.Command.AssignHost
	5,  // 2: landscapehostagentapi.Command.start:type_name -> landscapehostagentapi.Command.Start
	6,  // 3: landscapehostagentapi.Command.stop:type_name -> landscapehostagentapi.Command.Stop
	7,  // 4: landscapehostagentapi.Command.install:type_name -> landscapehostagentapi.Command.Install
	8,  // 5: landscapehostagentapi.Command.uninstall:type_name -> landscapehostagentapi.Command.Uninstall
	9,  // 6: landscapehostagentapi.Command.set_default:type_name -> landscapehostagentapi.Command.SetDefault
	10, // 7: landscapehostagentapi.Command.shutdown_host:type_name -> landscapehostagentapi.Command.ShutdownHost
	0,  // 8: landscapehostagentapi.HostAgentInfo.InstanceInfo.instance_state:type_name -> landscapehostagentapi.InstanceState
	1,  // 9: landscapehostagentapi.LandscapeHostAgent.Connect:input_type -> landscapehostagentapi.HostAgentInfo
	2,  // 10: landscapehostagentapi.LandscapeHostAgent.Connect:output_type -> landscapehostagentapi.Command
	10, // [10:11] is the sub-list for method output_type
	9,  // [9:10] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_hostagent_proto_init() }
func file_hostagent_proto_init() {
	if File_hostagent_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_hostagent_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HostAgentInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hostagent_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Command); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hostagent_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HostAgentInfo_InstanceInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hostagent_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Command_AssignHost); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hostagent_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Command_Start); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hostagent_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Command_Stop); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hostagent_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Command_Install); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hostagent_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Command_Uninstall); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hostagent_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Command_SetDefault); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hostagent_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Command_ShutdownHost); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_hostagent_proto_msgTypes[0].OneofWrappers = []interface{}{}
	file_hostagent_proto_msgTypes[1].OneofWrappers = []interface{}{
		(*Command_AssignHost_)(nil),
		(*Command_Start_)(nil),
		(*Command_Stop_)(nil),
		(*Command_Install_)(nil),
		(*Command_Uninstall_)(nil),
		(*Command_SetDefault_)(nil),
		(*Command_ShutdownHost_)(nil),
	}
	file_hostagent_proto_msgTypes[6].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_hostagent_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_hostagent_proto_goTypes,
		DependencyIndexes: file_hostagent_proto_depIdxs,
		EnumInfos:         file_hostagent_proto_enumTypes,
		MessageInfos:      file_hostagent_proto_msgTypes,
	}.Build()
	File_hostagent_proto = out.File
	file_hostagent_proto_rawDesc = nil
	file_hostagent_proto_goTypes = nil
	file_hostagent_proto_depIdxs = nil
}
